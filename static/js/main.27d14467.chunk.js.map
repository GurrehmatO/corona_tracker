{"version":3,"sources":["components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","components/ControlledExpansionPanels/ControlledExpansionPanels.module.css","components/BarGraph/BarGraph.module.css","images/images.jpeg","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","components/ControlledExpansionPanels/ControlledExpansionPanels.jsx","components/BarGraph/BarGraph.jsx","components/SimpleExpansionPanel/SimpleExpansionPanel.jsx","App.js","index.js","components/SimpleExpansionPanel/SimpleExpansionPanel.module.css","App.module.css","components/Cards/Cards.module.css"],"names":["module","exports","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","Cards","data","confirmed","recovered","deaths","lastUpdate","classes","React","useState","confirmedExpanded","setConfirmedExpanded","recoveryExpanded","setRecoveryExpanded","deathExpanded","setDeathtExpanded","handleExpandClick","clickedCard","deathPercentage","value","toFixed","recoveryPercentage","activeCases","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","card","CardContent","Typography","confirmedTextColor","gutterBottom","variant","start","end","separator","color","Date","getDate","getMonth","getFullYear","toTimeString","IconButton","clsx","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","recoveredTextColor","deathsTextColor","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","backgroundColor","fill","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","secondary","ControlledExpansionPanels","panel","expanded","setExpanded","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","id","ExpansionPanelDetails","BarGraph","state","series","chart","type","stacked","stackType","plotOptions","bar","horizontal","stroke","colors","xaxis","categories","tooltip","y","formatter","val","opacity","backgrounColors","fontWeight","fontWeightRegular","SimpleExpansionPanel","Link","href","App","fetchedData","setState","this","image","src","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27d14467.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__2vZlJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1F35-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ControlledExpansionPanels_container__oM3QO\",\"heading\":\"ControlledExpansionPanels_heading__1zOpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BarGraph_container__3pTE-\"};","module.exports = __webpack_public_path__ + \"static/media/images.3fdb664f.jpeg\";","import React, { Component } from 'react';\r\nimport {Card, CardContent , Typography, Grid, Collapse, CardMedia} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n  }));\r\n  \r\n  \r\nconst Cards= ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    const classes = useStyles();\r\n    const [confirmedExpanded, setConfirmedExpanded] = React.useState(false);\r\n    const [recoveryExpanded, setRecoveryExpanded] = React.useState(false);\r\n    const [deathExpanded, setDeathtExpanded] = React.useState(false);\r\n      const handleExpandClick = (clickedCard) => {\r\n        switch(clickedCard) {\r\n            case 'active':\r\n                setConfirmedExpanded(!confirmedExpanded);\r\n                break;\r\n            case 'recovery':\r\n                setRecoveryExpanded(!recoveryExpanded);\r\n                break;\r\n            case 'death':\r\n                setDeathtExpanded(!deathExpanded);\r\n                break;\r\n        }\r\n      };\r\n    if(!confirmed){\r\n        return 'Loading..';\r\n    }\r\n\r\n    \r\n    var deathPercentage= ((deaths.value/confirmed.value)*100).toFixed(2);\r\n    var recoveryPercentage= ((recovered.value/confirmed.value)*100).toFixed(2);\r\n    var activeCases= confirmed.value- deaths.value- recovered.value;\r\n    return(\r\n        \r\n        <div className={styles.container}>\r\n            \r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.confirmed)}>                \r\n                \r\n                <CardContent>\r\n                    <Typography className={styles.confirmedTextColor} gutterBottom>\r\n                    Confirmed\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" variant=\"body2\" component=\"p\">\r\n                    Last Update : {new Date(lastUpdate).getDate()+ \"-\" +(new Date(lastUpdate).getMonth()+ 1) + \"-\" +new Date(lastUpdate).getFullYear()+ \", \"+new Date(lastUpdate).toTimeString()}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                    Number of confirmed cases of COVID-19.\r\n                    </Typography>\r\n                    \r\n                </CardContent>\r\n                <IconButton\r\n                    className={clsx(classes.expand, {\r\n                        [classes.expandOpen]: confirmedExpanded,\r\n                    })}\r\n                    onClick={() => handleExpandClick('active')}\r\n                    aria-expanded={confirmedExpanded}\r\n                    aria-label=\"show more\"\r\n                    >\r\n                    <ExpandMoreIcon />\r\n                </IconButton>\r\n                <Collapse in={confirmedExpanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                    <Typography className={styles.confirmedTextColor} gutterBottom>\r\n                    Active Cases\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={activeCases} duration={0.75} separator=\",\" />                   \r\n                    </Typography>\r\n                    </CardContent>\r\n                </Collapse>\r\n                </Grid>\r\n                <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography className={styles.recoveredTextColor} gutterBottom>\r\n                    Recovered\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" variant=\"body2\" component=\"p\">\r\n                    Last Update : {new Date(lastUpdate).getDate()+ \"-\" +(new Date(lastUpdate).getMonth()+ 1) + \"-\" +new Date(lastUpdate).getFullYear()+ \", \"+new Date(lastUpdate).toTimeString()}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                    Number of recoveries from COVID-19.\r\n                    </Typography>\r\n                </CardContent>\r\n                <IconButton\r\n                    className={clsx(classes.expand, {\r\n                        [classes.expandOpen]: recoveryExpanded,\r\n                    })}\r\n                    onClick={() => handleExpandClick('recovery')}\r\n                    aria-expanded={recoveryExpanded}\r\n                    aria-label=\"show more\"\r\n                    >\r\n                    <ExpandMoreIcon />\r\n                </IconButton>\r\n                <Collapse in={recoveryExpanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                    <Typography className={styles.recoveredTextColor} gutterBottom>\r\n                    Recovery Percentage\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                    {recoveryPercentage}%\r\n                    </Typography>\r\n                    </CardContent>\r\n                </Collapse>\r\n                </Grid>\r\n                <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography className={styles.deathsTextColor} gutterBottom>\r\n                    Deaths\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\" variant=\"body2\" component=\"p\">\r\n                    Last Update : {new Date(lastUpdate).getDate()+ \"-\" +(new Date(lastUpdate).getMonth()+ 1) + \"-\" +new Date(lastUpdate).getFullYear()+ \", \"+new Date(lastUpdate).toTimeString()}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                    Number of deaths caused by COVID-19.\r\n                    </Typography>\r\n                </CardContent>\r\n                <IconButton\r\n                    className={clsx(classes.expand, {\r\n                        [classes.expandOpen]: deathExpanded,\r\n                    })}\r\n                    onClick={() => handleExpandClick('death')}\r\n                    aria-expanded={deathExpanded}\r\n                    aria-label=\"show more\"\r\n                    >\r\n                    <ExpandMoreIcon />\r\n                </IconButton>\r\n                <Collapse in={deathExpanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                    <Typography className={styles.deathsTextColor} gutterBottom>\r\n                    Death Percentage\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                    {deathPercentage}%\r\n                    </Typography>\r\n                    </CardContent>\r\n                </Collapse>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </div>\r\n        \r\n    );\r\n   \r\n        \r\n}\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country)=> {\r\n    let changeableUrl= url;\r\n    if(country){\r\n        changeableUrl= `${url}/countries/${country}`\r\n    }\r\n\r\n    try{\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}}= await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate};\r\n    }catch (error){\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const fetchDailyData = async ()=> {\r\n    try{\r\n        const { data } = await axios.get(`${url}/daily`);        \r\n        //console.log(data);\r\n        const modifiedData= data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    }catch (error){\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n      const { data: { countries } } = await axios.get(`${url}/countries`);\r\n  \r\n      return countries.map((country) => country.name);\r\n      //console.log(countries.map((country) => country.name));\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\nimport styles from './Charts.module.css';\r\n\r\n\r\n\r\nconst Charts= ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData]= useState([]);\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n          setDailyData(await fetchDailyData());\r\n    \r\n          //setDailyData(initialDailyData);\r\n        };\r\n        //console.log(dailyData);\r\n        fetchAPI();\r\n      },[]);\r\n      const lineChart = (\r\n        dailyData[0] ? (\r\n          <Line\r\n            data={{\r\n              labels: dailyData.map(({date})=>date),\r\n              datasets: [{\r\n                data: dailyData.map((data) => data.confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#000000',\r\n                backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n\r\n                fill: true,\r\n              }, {\r\n                data: dailyData.map((data) => data.deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                fill: true,\r\n              },\r\n              ],\r\n            }}\r\n          />\r\n          ) : null\r\n      );\r\n\r\n      const barChart = (\r\n        confirmed ? (\r\n          <Bar\r\n            data={{\r\n              labels: ['Confirmed', 'Recovered', 'Deaths'],\r\n              datasets: [\r\n                {\r\n                  label: 'People',\r\n                  backgroundColor: ['rgba(0, 0, 0, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.6)'],\r\n                  data: [confirmed.value, recovered.value, deaths.value],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              legend: { display: false },\r\n              title: { display: true, text: `Current state of COVID-19 in ${country}` },\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n\r\n      \r\n      \r\n\r\n      return (\r\n        <div className={styles.container}>\r\n          {country ? barChart : lineChart}\r\n        </div>\r\n      );\r\n};\r\n    \r\n        \r\n\r\nexport default Charts;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n    \r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue='' onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">  World</option>\r\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n        \r\n}\r\nexport default CountryPicker;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport styles from './ControlledExpansionPanels.module.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function ControlledExpansionPanels() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <ExpansionPanel item xs={12} md={3} expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>COVID-19 Symptoms</Typography>\r\n          <Typography className={classes.secondaryHeading}>Check the symptoms here</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n          People with COVID-19 have had a wide range of symptoms reported - ranging from mild symptoms to severe illness. These symptoms may appear 2-14 days after exposure to the virus:\r\n\r\n          <Typography color=\"textSecondary\">+ Fever </Typography>\r\n          <Typography color=\"textSecondary\">+ Cough </Typography>\r\n          <Typography color=\"textSecondary\">+ Shortness of breath or difficulty breathing </Typography>\r\n          <Typography color=\"textSecondary\">+ Chills </Typography>\r\n          <Typography color=\"textSecondary\">+ Repeated shaking with chills </Typography>\r\n          <Typography color=\"textSecondary\">+ Muscle pain </Typography>\r\n          <Typography color=\"textSecondary\">+ Headache </Typography>\r\n          <Typography color=\"textSecondary\">+ Sore throat </Typography>\r\n          <Typography color=\"textSecondary\">+ New loss of taste or smell </Typography>\r\n                     \r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n      \r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect, Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport styles from './BarGraph.module.css';\r\nimport { fetchData} from '../../api';\r\n\r\n\r\nconst BarGraph= ({data:{confirmed, recovered, deaths, lastUpdate}}) =>{\r\n    if(!confirmed){\r\n        return 'Loading..';\r\n    }\r\n      const a=confirmed.value- deaths.value- recovered.value;\r\n     \r\n      //console.log(activeCases);\r\n      var b=recovered.value;\r\n      //console.log(a);\r\n      var c=deaths.value;\r\n      //var a=5; \r\n      //var b=8; \r\n      //var c=9;\r\n     \r\n      const state = {\r\n      \r\n        series: [{\r\n          name: 'Active',\r\n          label: 'Active',\r\n          backgroundColor:'#00000080',\r\n          \r\n          data: [a],\r\n        }, {\r\n          name: 'Recovered',\r\n          label: 'Recovered',\r\n          backgroundColor: '#00ff00',\r\n          data: [b]\r\n        }, {\r\n          name: 'Deaths',\r\n          label: 'Deaths',\r\n          backgroundColor: '#ff0000',\r\n          data: [c]\r\n        }],\r\n        options: {\r\n          chart: {\r\n            type: 'bar',\r\n            height: 130,\r\n            stacked: true,\r\n            stackType: '100%'\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: true,\r\n            },\r\n          },\r\n          stroke: {\r\n            width: 1,\r\n            colors: ['#00000080','#00ff00','#ff0000']\r\n          },\r\n          \r\n          xaxis: {\r\n            categories: [\"As of \"+ new Date(lastUpdate).getDate()+ \"-\" +(new Date(lastUpdate).getMonth()+ 1) + \"-\" +new Date(lastUpdate).getFullYear()],\r\n          },\r\n          tooltip: {\r\n            y: {\r\n              formatter: function (val) {\r\n                return val \r\n              }\r\n            }\r\n          },\r\n          fill: {\r\n            opacity: 1,\r\n            \r\n          \r\n          },\r\n          legend:{\r\n              label:{\r\n                backgrounColors: ['#00000080','#00ff00','#ff0000']\r\n              }\r\n          }\r\n        },\r\n      \r\n      \r\n      };\r\n    \r\n\r\n  \r\n\r\n    \r\n      return (\r\n        \r\n\r\n  <div className={styles.container}>\r\n    <Chart options={state.options} series={state.series} type=\"bar\" height={130} />\r\n</div>\r\n\r\n\r\n      );\r\n    \r\n  }\r\n  export default BarGraph;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport styles from './SimpleExpansionPanel.module.css';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nexport default function SimpleExpansionPanel() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <ExpansionPanel>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <Typography className={styles.heading}>Have a look at the developer here</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n          Shivang Raj\r\n\r\n          <Typography color=\"textSecondary\"> +91 9677853943 </Typography>\r\n          <Typography color=\"textSecondary\"> rajshivang07@gmail.com </Typography>\r\n          <Typography>\r\n            \r\n            <Link href=\"https://github.com/rajshivang07\" color=\"blue\">\r\n                Click here to access my GitHub page\r\n            </Link>\r\n            \r\n            </Typography>      \r\n             \r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n      \r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport {Cards, Charts, CountryPicker, ControlledExpansionPanels, BarGraph, SimpleExpansionPanel} from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\nimport image from './images/images.jpeg';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n  async componentDidMount() {\n    \n    const fetchedData = await fetchData();\n\n    this.setState({data: fetchedData});\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    //console.log(data);\n    //console.log(country);\n    this.setState({ data: fetchedData, country: country });\n  }\n\n  render() {\n    const {data, country}=this.state;\n    return(\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <ControlledExpansionPanels/>\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        \n        <Cards data={data}/>\n        <BarGraph data={data}/>\n        <Charts data={data} country={country}/>\n        <SimpleExpansionPanel/>\n      </div>\n    )\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SimpleExpansionPanel_container__2w5GO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3ePdN\",\"image\":\"App_image__1_uIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__PSQej\",\"card\":\"Cards_card__2c6jO\",\"confirmed\":\"Cards_confirmed__2pPg6\",\"confirmedTextColor\":\"Cards_confirmedTextColor__3ULOP\",\"recovered\":\"Cards_recovered__2vGCa\",\"recoveredTextColor\":\"Cards_recoveredTextColor__g1Ie7\",\"deaths\":\"Cards_deaths__2Ft7V\",\"deathsTextColor\":\"Cards_deathsTextColor__xXGa7\",\"deathPercentage\":\"Cards_deathPercentage__33E3S\"};"],"sourceRoot":""}